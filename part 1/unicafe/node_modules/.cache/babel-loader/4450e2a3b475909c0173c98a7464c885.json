{"ast":null,"code":"var _jsxFileName = \"/home/yusuf/workspace/labs/react/react/FullStack_Open_2022/part 1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    all,\n    average,\n    positive\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Statistics;\n\nfunction App() {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let average = 0;\n  let positive = 0;\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const all = good + neutral + bad;\n  average = (good - bad) / all;\n  positive = good / all * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"average\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"positive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral,\n      all: all,\n      positive: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Statistics","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad","handleGood","handleBad","handleNeutral"],"sources":["/home/yusuf/workspace/labs/react/react/FullStack_Open_2022/part 1/unicafe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Statistics = ({good, neutral, bad, all, average, positive}) => {\n  return(<div>\n      <h3>feedback</h3>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {all}</p>\n      <p>average {average}</p>\n      <p>positive {positive}%</p>\n  </div>)\n}\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let average = 0\n  let positive = 0\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n  const all = good + neutral + bad;\n\n   average = (good - bad) / all;\n\n   positive = good/all * 100;\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGood}>good</button>\n      <button onClick={handleNeutral}>neutral</button>\n      <button onClick={handleBad}>bad</button>\n      <button onClick={handleGood}>all</button>\n      <button onClick={handleNeutral}>average</button>\n      <button onClick={handleBad}>positive</button>\n      <Statistics good = {good} bad = {bad} neutral={neutral} all = {all} positive={positive}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,QAAkD;EAAA,IAAjD;IAACC,IAAD;IAAOC,OAAP;IAAgBC,GAAhB;IAAqBC,GAArB;IAA0BC,OAA1B;IAAmCC;EAAnC,CAAiD;EACnE,oBAAO;IAAA,wBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAA,oBAASL,IAAT;IAAA;MAAA;MAAA;MAAA;IAAA,QAFG,eAGH;MAAA,uBAAYC,OAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG,eAIH;MAAA,mBAAQC,GAAR;IAAA;MAAA;MAAA;MAAA;IAAA,QAJG,eAKH;MAAA,mBAAQC,GAAR;IAAA;MAAA;MAAA;MAAA;IAAA,QALG,eAMH;MAAA,uBAAYC,OAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QANG,eAOH;MAAA,wBAAaC,QAAb;IAAA;MAAA;MAAA;MAAA;IAAA,QAPG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AASD,CAVD;;KAAMN,U;;AAYN,SAASO,GAAT,GAAe;EAAA;;EACb,MAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACG,OAAD,EAAUO,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACI,GAAD,EAAMO,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;EACA,IAAIM,OAAO,GAAG,CAAd;EACA,IAAIC,QAAQ,GAAG,CAAf;;EACA,MAAMK,UAAU,GAAG,MAAM;IACvBH,OAAO,CAACP,IAAI,GAAG,CAAR,CAAP;EACD,CAFD;;EAIA,MAAMW,SAAS,GAAG,MAAM;IACtBF,MAAM,CAACP,GAAG,GAAG,CAAP,CAAN;EACD,CAFD;;EAIA,MAAMU,aAAa,GAAG,MAAM;IAC1BJ,UAAU,CAACP,OAAO,GAAG,CAAX,CAAV;EACD,CAFD;;EAGA,MAAME,GAAG,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA7B;EAECE,OAAO,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAeC,GAAzB;EAEAE,QAAQ,GAAGL,IAAI,GAACG,GAAL,GAAW,GAAtB;EACD,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEO,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEE,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAED,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,OAAO,EAAED,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAQ,OAAO,EAAEE,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAQ,OAAO,EAAED,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE,QAAC,UAAD;MAAY,IAAI,EAAIX,IAApB;MAA0B,GAAG,EAAIE,GAAjC;MAAsC,OAAO,EAAED,OAA/C;MAAwD,GAAG,EAAIE,GAA/D;MAAoE,QAAQ,EAAEE;IAA9E;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAlCQC,G;;MAAAA,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}